# =============================================================================
# REQUIRED SETTINGS - must be configured for the application to work
# =============================================================================

# Your Telegram bot token (get it from @BotFather)
BOT_TOKEN=your_telegram_bot_token_here

# Path to directory for storing downloaded files
# Examples: /home/user/downloads, /app/media, C:\Downloads
MOVIE_PATH=/path/to/your/movie/directory

# Administrator password (minimum 8 characters)
# Used for full access including /temp command
ADMIN_PASSWORD=your_admin_password

# =============================================================================
# OPTIONAL SETTINGS - default values will be used if not specified
# =============================================================================

# Password for regular users (if not set, ADMIN_PASSWORD is used)
# Regular users can download but cannot generate temporary passwords
#REGULAR_PASSWORD=your_regular_password

# Interface language (default: en)
# Available options: en, ru
#LANG=ru

# Logging level (default: info)
# Options: debug, info, warn, error
#LOG_LEVEL=debug

# Maximum number of concurrent downloads (default: 3)
# Higher values may improve throughput but use more resources
# Examples: 1, 3, 5, 10
#MAX_CONCURRENT_DOWNLOADS=5

# Download timeout (default: no timeout)
# Examples: 30m, 1h, 2h30m, 0 (no timeout)
#DOWNLOAD_TIMEOUT=60m

# Progress update interval (default: 3s)
# How often to update download progress in the database
# Examples: 1s, 3s, 5s, 10s
#PROGRESS_UPDATE_INTERVAL=5s

# Proxy for yt-dlp downloads (optional)
# Supports HTTP, HTTPS, SOCKS4, SOCKS5 proxies
# Examples: http://proxy:8080, socks5://127.0.0.1:1080
#PROXY=socks5://127.0.0.1:1080

# Domains to use proxy for (if empty, proxy is always used)
# Comma-separated list of domains
# Examples: youtube.com,youtu.be or rutube.ru,vk.com
#PROXY_DOMAINS=youtube.com,youtu.be

# Prowlarr URL for torrent search integration (optional)
# Must be accessible from the container/server
#PROWLARR_URL=http://localhost:9696

# Prowlarr API key for authentication (optional)
# Found in Prowlarr Settings -> General -> Security
#PROWLARR_API_KEY=your_prowlarr_api_key

# =============================================================================
# ADVANCED ARIA2 SETTINGS - for fine-tuning torrent downloads
# =============================================================================

# Maximum number of peers to connect to per torrent (default: 200)
# Higher values improve peer discovery but use more bandwidth
# Examples: 50, 100, 200, 300
#ARIA2_MAX_PEERS=200

# Maximum connections per server for HTTP/FTP downloads (default: 16)
# Examples: 8, 16, 32
#ARIA2_MAX_CONNECTIONS_PER_SERVER=16

# Number of connections to split downloads into (default: 16)
# Higher values can improve speed for fast servers
# Examples: 4, 8, 16, 32
#ARIA2_SPLIT=16

# Minimum size to split a file (default: 1M)
# Examples: 512K, 1M, 2M, 5M
#ARIA2_MIN_SPLIT_SIZE=1M

# Maximum BitTorrent peers per torrent (default: 200)
# More peers can improve download speed
# Examples: 50, 100, 200, 300
#ARIA2_BT_MAX_PEERS=200

# Speed limit for peer requests (default: 0 = unlimited)
# Format: number with K/M suffix or 0 for unlimited
# Examples: 0, 100K, 1M, 5M
#ARIA2_BT_REQUEST_PEER_SPEED_LIMIT=0

# Maximum open files for BitTorrent (default: 100)
# Higher values needed for torrents with many files
# Examples: 50, 100, 200, 500
#ARIA2_BT_MAX_OPEN_FILES=100

# Global upload limit for all torrents (default: 1M)
# Examples: 0 (unlimited), 100K, 1M, 5M
#ARIA2_MAX_OVERALL_UPLOAD_LIMIT=1M

# Upload limit per torrent (default: 200K)
# Examples: 0 (unlimited), 50K, 200K, 1M
#ARIA2_MAX_UPLOAD_LIMIT=200K

# Seed ratio - stop seeding when reached (default: 0.0 = don't seed)
# Examples: 0.0, 0.5, 1.0, 2.0
#ARIA2_SEED_RATIO=0.0

# Seed time in seconds (default: 0 = don't seed)
# Examples: 0, 300 (5min), 1800 (30min), 3600 (1hour)
#ARIA2_SEED_TIME=0

# Tracker timeout in seconds (default: 60)
# Examples: 30, 60, 120
#ARIA2_BT_TRACKER_TIMEOUT=60

# Tracker announce interval in seconds (default: 0 = use tracker default)
# Examples: 0, 300, 600, 1800
#ARIA2_BT_TRACKER_INTERVAL=0

# Enable DHT for peer discovery (default: true)
# DHT helps find peers without trackers
#ARIA2_ENABLE_DHT=true

# Enable peer exchange (PEX) (default: true)
# Allows peers to share other peer addresses
#ARIA2_ENABLE_PEER_EXCHANGE=true

# Enable local peer discovery (LPD) (default: true)
# Finds peers on local network
#ARIA2_ENABLE_LOCAL_PEER_DISCOVERY=true

# Follow torrent files (default: true)
# Process .torrent files automatically
#ARIA2_FOLLOW_TORRENT=true

# Listen ports for incoming connections (default: 6881-6999)
# Format: single port or range. Must be open in firewall for Docker
# Examples: 6881, 6881-6889, 6881-6999
#ARIA2_LISTEN_PORT=6881-6999

# DHT listen ports (default: 6881-6999)
# Usually same as listen ports
#ARIA2_DHT_PORTS=6881-6999

# Save .torrent metadata files (default: true)
# Keeps torrent files for resume capability
#ARIA2_BT_SAVE_METADATA=true

# Verify piece hashes when seeding (default: true)
# Ensures data integrity but uses CPU
#ARIA2_BT_HASH_CHECK_SEED=true

# Require BitTorrent encryption (default: false)
# May help avoid traffic shaping but reduces peer pool
#ARIA2_BT_REQUIRE_CRYPTO=false

# Minimum encryption level (default: plain)
# Options: plain, arc4
#ARIA2_BT_MIN_CRYPTO_LEVEL=plain

# Check file integrity before completion (default: false)
# Slower but ensures file correctness
#ARIA2_CHECK_INTEGRITY=false

# Continue partial downloads (default: true)
# Resume interrupted downloads
#ARIA2_CONTINUE_DOWNLOAD=true

# Use remote server time for timestamps (default: true)
# Maintains accurate file modification times
#ARIA2_REMOTE_TIME=true

# File allocation method (default: none)
# Options: none, prealloc, trunc, falloc
# Use 'none' for Docker compatibility, 'falloc' for better performance on Linux
#ARIA2_FILE_ALLOCATION=none

# =============================================================================
# NETWORK AND PROXY SETTINGS - for bypassing ISP blocks
# =============================================================================

# HTTP/HTTPS proxy for aria2 torrent connections
# Useful for bypassing ISP torrent blocking
# Examples: http://proxy:8080, socks5://127.0.0.1:1080
#ARIA2_HTTP_PROXY=

# All proxy for aria2 (applies to all protocols)
# Examples: http://proxy:8080, socks5://127.0.0.1:1080
#ARIA2_ALL_PROXY=

# User agent for HTTP requests (default: aria2/1.37.0)
# Some trackers block default aria2 user agent
# Examples: Mozilla/5.0, uTorrent/3.5.5, qBittorrent/4.5.0
#ARIA2_USER_AGENT=

# Connection timeout in seconds (default: 60)
# Increase for slow connections or high latency
# Examples: 30, 60, 120
#ARIA2_TIMEOUT=60

# Retry attempts for failed connections (default: 5)
# Higher values help with unstable connections
# Examples: 3, 5, 10
#ARIA2_MAX_TRIES=5

# Retry wait time in seconds (default: 0)
# Wait between retry attempts
# Examples: 0, 1, 3, 5
#ARIA2_RETRY_WAIT=0

# =============================================================================
# VIDEO PROCESSING SETTINGS - for streaming video downloads (yt-dlp)
# =============================================================================

# Enable video reencoding with ffmpeg (default: false)
# When enabled, downloaded videos will be processed by ffmpeg
#VIDEO_ENABLE_REENCODING=false

# Force reencoding even if video format is already compatible (default: false)
# Useful for ensuring consistent quality/format across all downloads
#VIDEO_FORCE_REENCODING=false

# Video codec for reencoding (default: h264)
# Options: h264, h265, vp9, av1
#VIDEO_CODEC=h264

# Audio codec for reencoding (default: mp3)
# Options: mp3, aac, opus, flac
#AUDIO_CODEC=mp3

# Output video format (default: mp4)
# Options: mp4, mkv, avi, webm
#VIDEO_OUTPUT_FORMAT=mp4

# Additional ffmpeg arguments (default: -pix_fmt yuv420p)
# For maximum compatibility with older devices/TVs
# Examples: -pix_fmt yuv420p, -crf 23, -preset medium
#FFMPEG_EXTRA_ARGS=-pix_fmt yuv420p

# yt-dlp quality selector (default: bv*+ba/b)
# Controls which video/audio streams to download
# Examples: bv*+ba/b, best[height<=720], worst
#VIDEO_QUALITY_SELECTOR=bv*+ba/b

# Compatibility mode for old devices (default: false)
# Forces specific settings optimized for older TVs/devices
#VIDEO_COMPATIBILITY_MODE=false
