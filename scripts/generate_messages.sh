#!/bin/bash

# Set paths to input and output files
INPUT_FILE="internal/lang/messages.yaml"
OUTPUT_FILE="internal/lang/messages_gen.go"
PACKAGE_NAME="lang"

# Check if messages.yaml exists
if [ ! -f "$INPUT_FILE" ]; then
    echo "Error: $INPUT_FILE not found!"
    exit 1
fi

# Create or clear the messages_gen.go file
echo "package $PACKAGE_NAME" > "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"
echo "// This file is automatically generated from messages.yaml" >> "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"
echo "type MessageID string" >> "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"

# Generate MessageID constants
echo "const (" >> "$OUTPUT_FILE"

# Use Python to generate constants
python3 -c "
import yaml
with open('$INPUT_FILE', 'r', encoding='utf-8') as f:
    data = yaml.safe_load(f)
for key in data.keys():
    # Replace spaces and dashes with underscores for valid Go identifiers
    const_name = key.replace(' ', '_').replace('-', '_') + 'MsgID'
    print(f'    {const_name} MessageID = \"{key}\"')
" >> "$OUTPUT_FILE"

echo ")" >> "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"

# Generate messages variable
echo "var messages = map[MessageID]map[string]string{" >> "$OUTPUT_FILE"

# Use Python to parse YAML and generate Go code with proper escaping
python3 -c "
import yaml
import json
with open('$INPUT_FILE', 'r', encoding='utf-8') as f:
    data = yaml.safe_load(f)
for key, value in data.items():
    escaped_key = key.replace('\"', '\\\"')
    print(f'    \"{escaped_key}\": {{')
    for lang, msg in value.items():
        escaped_msg = json.dumps(msg)
        print(f'        \"{lang}\": {escaped_msg},')
    print('    },')
" >> "$OUTPUT_FILE"

echo "}" >> "$OUTPUT_FILE"

echo "File $OUTPUT_FILE has been successfully generated."
